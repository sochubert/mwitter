{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Mweet.js","components/MweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","REACT_APP_MESSAGIN","appId","measurementId","firebase","initializeApp","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Mweet","mweetObject","isOwner","editing","setEditing","text","newMweet","setNewMweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","MweetFactory","userObject","mweet","setMweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","mweets","setMweets","useEffect","onSnapshot","snapshot","mweetArray","docs","map","marginTop","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","from","App","init","setInit","setUserObject","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb2b7f00.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUR_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\n\nexport const dbService = firebase.firestore();\n\nexport const storageService = firebase.storage();","import React, {useState} from \"react\";\nimport {authService} from \"fbase\";\n\nconst inputStyles = {};\n\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n      <input \n      name=\"email\" \n      type=\"text\" \n      placeholder=\"Email\" \n      required \n      value={email}\n      onChange={onChange}\n      className=\"authInput\"\n      />\n      <input \n      name=\"password\"\n      type=\"password\" \n      placeholder=\"Password\" \n      required \n      value={password}\n      className=\"authInput\"\n      onChange={onChange}\n      />\n      <input type=\"submit\" className=\"authInput authSubmit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\n      {error && <span className=\"authError\">{error}</span>}\n    </form>\n    <span onClick={toggleAccount} className=\"authSwitch\">{newAccount ? \"Sign In\" : \"Create Account\"}</span>\n  </>\n  );\n};\n\nexport default AuthForm;","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { authService, firebaseInstance } from 'fbase';\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n  return (\n  <div className=\"authContainer\">\n    <FontAwesomeIcon\n      icon={faTwitter}\n      color={\"#04AAFF\"}\n      size=\"3x\"\n      style={{ marginBottom: 30 }}\n  />\n    <AuthForm />\n    <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n      </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","import { dbService, storageService } from 'fbase';\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Mweet = ({mweetObject, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newMweet, setNewMweet] = useState(mweetObject.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this mweet?\");\n    if(ok) {\n      await dbService.doc(`mweets/${mweetObject.id}`).delete();\n      await storageService.refFromURL(mweetObject.attachmentUrl).delete();\n    }\n  };\nconst toggleEditing = () => setEditing((prev) => !prev);\nconst onSubmit = async (event) => {\n  event.preventDefault();\n  await dbService.doc(`mweets/${mweetObject.id}`).update({\n    text:newMweet,\n  });\n  setEditing(false);\n} \nconst onChange = (event) => {\n  const {\n    target: {value},\n  } = event;\n  setNewMweet(value);\n}\n  return (\n    <div className=\"mweet\">\n      {\n        editing ? (\n          <>\n        <form onSubmit={onSubmit} className=\"container mweetEdit\"> \n          <input type=\"text\" placeholder=\"Edit your mweet\" value={newMweet} required autoFocus onChange={onChange} className=\"formInput\" />\n          <input type=\"submit\" value=\"Update Mweet\" className=\"formBtn\" />\n        </form>\n        <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n        </span>\n        </>\n      ) : (\n      <>\n        <h4>{mweetObject.text}</h4>\n        {mweetObject.attachmentUrl && <img src={mweetObject.attachmentUrl} />}\n        {isOwner && (\n        <div class=\"mweet__actions\">\n          <span onClick={onDeleteClick}>\n            <FontAwesomeIcon icon={faTrash} />\n          </span>\n          <span onClick={toggleEditing}>\n            <FontAwesomeIcon icon={faPencilAlt} />\n          </span>\n        </div>\n      )}\n      </>\n      )}\n    </div>\n  );\n};\n\n\nexport default Mweet;","import React, { useState } from \"react\";\nimport {v4 as uuidv4 } from \"uuid\";\nimport {storageService, dbService} from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst MweetFactory = ({userObject}) => {\n  const [mweet, setMweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onSubmit = async (event) => {\n    if (mweet === \"\") {\n      return;\n    }\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if(attachment !== \"\") {\n      const attachmentRef = storageService.ref().child(`${userObject.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const mweetObject = {\n      text: mweet,\n      createdAt: Date.now(),\n      creatorId: userObject.uid,\n      attachmentUrl,\n  };\n    await dbService.collection(\"mweets\").add(mweetObject);\n    setMweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setMweet(value);\n  };\n  const onFileChange = (event) => {\n    const { target:{files},\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: {result},\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => setAttachment(\"\");\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={mweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n        <img\n          src={attachment}\n          style={{\n            backgroundImage: attachment,\n          }}\n        />\n        <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n          <span>Remove</span>\n          <FontAwesomeIcon icon={faTimes} />\n        </div>\n      </div>\n      )}\n    </form>\n  )\n}\nexport default MweetFactory;","import { dbService, storageService } from 'fbase';\nimport React, {useEffect, useState} from \"react\"\nimport Mweet from \"components/Mweet\";\nimport MweetFactory from \"components/MweetFactory\";\n\nconst Home = ({userObject}) => {\n  const [mweets, setMweets] = useState([]);\n  useEffect(() => {\n    dbService.collection(\"mweets\").onSnapshot((snapshot) => {\n      const mweetArray = snapshot.docs.map(doc => ({\n        id: doc.id, \n        ...doc.data(),\n      }));\n      setMweets(mweetArray);\n    });\n  }, []);\n\n\nreturn (\n  <div className=\"container\">\n    <MweetFactory userObject={userObject} />\n    <div style={{marginTop: 30}}>\n      {mweets.map((mweet) => (\n        <Mweet key={mweet.id} mweetObject={mweet} isOwner={mweet.creatorId === userObject.uid } />\n      ))}\n    </div>\n  </div>\n  );\n};\nexport default Home;","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({ refreshUser, userObject }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObject.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObject.displayName !== newDisplayName) {\n      await userObject.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n  return (\n    <div className=\"container\">\n    <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          autoFocus\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};","import React, {displayName} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObject }) => (\n<nav>\n  <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n    <li>\n      <Link to=\"/\" style={{ marginRight: 10 }}>\n        <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n      </Link>\n    </li>\n    <li>\n    <Link\n      to=\"/profile\"\n      style={{\n        marginLeft: 10,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        fontSize: 12,\n      }}\n    >\n      <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n      <span style={{ marginTop: 10 }}>\n        {userObject.displayName\n          ? `${userObject.displayName}의 Profile`\n          : \"Profile\"}\n      </span>\n    </Link>\n    </li>\n  </ul>\n</nav>\n);\nexport default Navigation; ","import React from \"react\";\nimport {HashRouter as Router, Route, Switch, Redirect} from \"react-router-dom\";\nimport Auth from '../routes/Auth';\nimport Home from '../routes/Home';\nimport Profile from '../routes/Profile';\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObject }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObject={userObject} />}\n      <Switch>\n        {isLoggedIn ? (\n        <div\n          style={{\n            maxWidth: 890,\n            width: \"100%\",\n            margin: \"0 auto\",\n            marginTop: 80,\n            display: \"flex\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Route exact path=\"/\">\n            <Home userObject={userObject} />\n          </Route>\n          <Route exact path=\"/profile\">\n            <Profile userObject={userObject} refreshUser={refreshUser} />\n          </Route>\n          <Redirect from=\"*\" to=\"/\" />\n        </div>\n        ) : (\n        <>\n        <Route exact path=\"/\">\n          <Auth />\n        </Route>\n        <Redirect from=\"*\" to=\"/\" />\n        </>\n        )}\n      </Switch>\n    </Router>\n  )\n}\n\nexport default AppRouter;","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObject, setUserObject] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObject({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObject({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObject)}\n          userObject={userObject}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}